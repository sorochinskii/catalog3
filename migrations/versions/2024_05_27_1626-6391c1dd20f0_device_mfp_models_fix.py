"""Device, MFP models fix.

Revision ID: 6391c1dd20f0
Revises: f9484792c213
Create Date: 2024-05-27 16:26:59.691288

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '6391c1dd20f0'
down_revision = 'f9484792c213'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('m_f_p',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('mac', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['device.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('mfp')
    op.add_column('device', sa.Column('serial', sa.String(), nullable=False))
    op.add_column('device', sa.Column('name', sa.String(), nullable=True))
    op.add_column('device', sa.Column('responsible_person_id', sa.Integer(), nullable=False))
    op.add_column('device', sa.Column('room_id', sa.Integer(), nullable=False))
    op.add_column('device', sa.Column('vendor_id', sa.Integer(), nullable=False))
    op.create_unique_constraint(None, 'device', ['serial'])
    op.create_foreign_key(None, 'device', 'person', ['responsible_person_id'], ['id'])
    op.create_foreign_key(None, 'device', 'room', ['room_id'], ['id'])
    op.create_foreign_key(None, 'device', 'vendor', ['vendor_id'], ['id'])
    op.alter_column('room', 'building_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('room', 'building_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_constraint(None, 'device', type_='foreignkey')
    op.drop_constraint(None, 'device', type_='foreignkey')
    op.drop_constraint(None, 'device', type_='foreignkey')
    op.drop_constraint(None, 'device', type_='unique')
    op.drop_column('device', 'vendor_id')
    op.drop_column('device', 'room_id')
    op.drop_column('device', 'responsible_person_id')
    op.drop_column('device', 'name')
    op.drop_column('device', 'serial')
    op.create_table('mfp',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('serial', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('vendor_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('room_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('responsible_person_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['id'], ['device.id'], name='mfp_id_fkey'),
    sa.ForeignKeyConstraint(['responsible_person_id'], ['person.id'], name='mfp_responsible_person_id_fkey'),
    sa.ForeignKeyConstraint(['room_id'], ['room.id'], name='mfp_room_id_fkey'),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendor.id'], name='mfp_vendor_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='mfp_pkey'),
    sa.UniqueConstraint('serial', name='mfp_serial_key')
    )
    op.drop_table('m_f_p')
    # ### end Alembic commands ###
